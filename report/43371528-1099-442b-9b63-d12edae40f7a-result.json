{"name": "test_login[case0]", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL '121.37.130.248/api/magicql/dev/manufacturer/search': No schema supplied. Perhaps you meant http://121.37.130.248/api/magicql/dev/manufacturer/search?", "trace": "self = <scripts.test_api.TestApi object at 0x0000019CB5C94D60>\ncase = {'expect': {'code': '0', 'count': 0, 'msg': '0'}, 'headers': {'Content-Type': 'application/json'}, 'method': 'post', 'param_type': 'json', ...}\n\n    @pytest.mark.parametrize(\"case\", tool.read_json())\n    def test_login(self, case):\n        try:\n>           re = Api(case).run_method()\n\nscripts\\test_api.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\api.py:39: in run_method\n    return self._post()\napi\\api.py:25: in _post\n    return requests.post(url=self.url, json=self.params, headers=self.headers)\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\sessions.py:528: in request\n    prep = self.prepare_request(req)\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\sessions.py:456: in prepare_request\n    p.prepare(\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\models.py:316: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>, url = '121.37.130.248/api/magicql/dev/manufacturer/search', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL '121.37.130.248/api/magicql/dev/manufacturer/search': No schema supplied. Perhaps you meant http://121.37.130.248/api/magicql/dev/manufacturer/search?\n\n..\\meishanprojectwebtest\\venv\\lib\\site-packages\\requests\\models.py:390: MissingSchema"}, "parameters": [{"name": "case", "value": "{'path': '/api/magicql/dev/manufacturer/search', 'method': 'post', 'headers': {'Content-Type': 'application/json'}, 'param_type': 'json', 'params': {'queryList': {}, 'page': {'current': 1, 'size': 10}}, 'expect': {'code': '0', 'msg': '0', 'count': 0}, 'x_y': [2, 12]}"}], "start": 1609743684073, "stop": 1609743684111, "uuid": "c8681c93-e9dd-409d-941c-4e90189d2270", "historyId": "e379b6747507f893da816908a0967bee", "testCaseId": "15a435bd292718c7c73b3ab796009614", "fullName": "scripts.test_api.TestApi#test_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApi"}, {"name": "host", "value": "bin"}, {"name": "thread", "value": "189448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_api"}]}